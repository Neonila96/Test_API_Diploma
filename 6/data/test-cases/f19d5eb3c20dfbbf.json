{"uid":"f19d5eb3c20dfbbf","name":"test_add_reaction_to_nonexistent_message","fullName":"test_API#test_add_reaction_to_nonexistent_message","historyId":"d9d7c07fa605be566cef353c659812a9","time":{"start":1730214389054,"stop":1730214389054,"duration":0},"status":"broken","statusMessage":"_pytest.fixtures.FixtureLookupError: ('headers', <FixtureRequest for <Function test_add_reaction_to_nonexistent_message>>)","statusTrace":"file /home/runner/work/Test_API_Diploma/Test_API_Diploma/test_API.py, line 81\n  def test_add_reaction_to_nonexistent_message(base_url1, channel_id, headers):\nE       fixture 'headers' not found\n>       available fixtures: base_url1, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, channel_id, doctest_namespace, get_headers, message_id, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/Test_API_Diploma/Test_API_Diploma/test_API.py:81","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url1","time":{"start":1730214389039,"stop":1730214389039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730214389039,"stop":1730214389040,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"suite","value":"test_API"},{"name":"host","value":"fv-az883-341"},{"name":"thread","value":"2106-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":6},"items":[{"uid":"2d7389f0e7f5e6e0","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/5//#testresult/2d7389f0e7f5e6e0","status":"failed","statusDetails":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210127963,"stop":1730210128139,"duration":176}},{"uid":"9731fdc4ef8b8854","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/4//#testresult/9731fdc4ef8b8854","status":"failed","statusDetails":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210042955,"stop":1730210043081,"duration":126}},{"uid":"38acbea3d2c9970b","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/3//#testresult/38acbea3d2c9970b","status":"failed","statusDetails":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got 401\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730209053415,"stop":1730209053525,"duration":110}},{"uid":"dc4682c185edb3ee","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/2//#testresult/dc4682c185edb3ee","status":"failed","statusDetails":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got 401\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730208045687,"stop":1730208045783,"duration":96}},{"uid":"e9c584d708261f39","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/1//#testresult/e9c584d708261f39","status":"passed","time":{"start":1730207690399,"stop":1730207690531,"duration":132}}]},"tags":[]},"source":"f19d5eb3c20dfbbf.json","parameterValues":[]}