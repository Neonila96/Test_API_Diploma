{"uid":"1f1202d14ce0f34b","name":"test_get_message_with_invalid_id","fullName":"test_API#test_get_message_with_invalid_id","historyId":"4a966d73c6c10b7fbec3082a81f2edf8","time":{"start":1730214389053,"stop":1730214389053,"duration":0},"status":"broken","statusMessage":"_pytest.fixtures.FixtureLookupError: ('headers', <FixtureRequest for <Function test_get_message_with_invalid_id>>)","statusTrace":"file /home/runner/work/Test_API_Diploma/Test_API_Diploma/test_API.py, line 74\n  def test_get_message_with_invalid_id(base_url1, channel_id, headers):\nE       fixture 'headers' not found\n>       available fixtures: base_url1, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, channel_id, doctest_namespace, get_headers, message_id, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/Test_API_Diploma/Test_API_Diploma/test_API.py:74","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url1","time":{"start":1730214389039,"stop":1730214389039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730214389039,"stop":1730214389040,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"suite","value":"test_API"},{"name":"host","value":"fv-az883-341"},{"name":"thread","value":"2106-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":6},"items":[{"uid":"cae2beedc9a5543f","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/5//#testresult/cae2beedc9a5543f","status":"failed","statusDetails":"AssertionError: Expected 400 for invalid message ID, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210127850,"stop":1730210127959,"duration":109}},{"uid":"ddb35d3cbf612a05","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/4//#testresult/ddb35d3cbf612a05","status":"failed","statusDetails":"AssertionError: Expected 400 for invalid message ID, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210042858,"stop":1730210042951,"duration":93}},{"uid":"efaba1306e3c5ee7","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/3//#testresult/efaba1306e3c5ee7","status":"failed","statusDetails":"AssertionError: Expected 400 for invalid message ID, but got 401: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730209053312,"stop":1730209053411,"duration":99}},{"uid":"af286cfd1e2b37c3","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/2//#testresult/af286cfd1e2b37c3","status":"failed","statusDetails":"AssertionError: Expected 400 for invalid message ID, but got 401: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730208045527,"stop":1730208045683,"duration":156}},{"uid":"652492e73393e0b1","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/1//#testresult/652492e73393e0b1","status":"passed","time":{"start":1730207690268,"stop":1730207690398,"duration":130}}]},"tags":[]},"source":"1f1202d14ce0f34b.json","parameterValues":[]}