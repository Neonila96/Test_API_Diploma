{"uid":"ee4aa8e340fedfa6","name":"test_create_message_with_text_and_attachment","fullName":"test_API#test_create_message_with_text_and_attachment","historyId":"5e587751f2e7d5500e9db88508e8dbcb","time":{"start":1730214389039,"stop":1730214389039,"duration":0},"status":"broken","statusMessage":"_pytest.fixtures.FixtureLookupError: ('headers', <FixtureRequest for <Function test_create_message_with_text_and_attachment>>)","statusTrace":"file /home/runner/work/Test_API_Diploma/Test_API_Diploma/test_API.py, line 4\n  @pytest.mark.usefixtures(\"base_url1\", \"channel_id\", \"headers\", \"message_id\")\n  def test_create_message_with_text_and_attachment(base_url1, channel_id, headers):\nE       fixture 'headers' not found\n>       available fixtures: base_url1, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, channel_id, doctest_namespace, get_headers, message_id, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/Test_API_Diploma/Test_API_Diploma/test_API.py:4","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url1","time":{"start":1730214389039,"stop":1730214389039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730214389039,"stop":1730214389040,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('base_url1', 'channel_id', 'headers', 'message_id')"},{"name":"suite","value":"test_API"},{"name":"host","value":"fv-az883-341"},{"name":"thread","value":"2106-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":6},"items":[{"uid":"2a8ea3220481dc61","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/5//#testresult/2a8ea3220481dc61","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210127209,"stop":1730210127209,"duration":0}},{"uid":"61fb2138c695c50","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/4//#testresult/61fb2138c695c50","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210042006,"stop":1730210042006,"duration":0}},{"uid":"4741f2d91458eb27","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/3//#testresult/4741f2d91458eb27","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730209052685,"stop":1730209052686,"duration":1}},{"uid":"9a266fb7db229045","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/2//#testresult/9a266fb7db229045","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730208044695,"stop":1730208044695,"duration":0}},{"uid":"7935e1cb1d7ca993","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/1//#testresult/7935e1cb1d7ca993","status":"passed","time":{"start":1730207687284,"stop":1730207687593,"duration":309}}]},"tags":["@pytest.mark.usefixtures('base_url1', 'channel_id', 'headers', 'message_id')"]},"source":"ee4aa8e340fedfa6.json","parameterValues":[]}