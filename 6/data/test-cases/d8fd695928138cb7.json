{"uid":"d8fd695928138cb7","name":"test_create_message_without_content","fullName":"test_API#test_create_message_without_content","historyId":"e6b251a8b4efccb9e97e657ba14117fb","time":{"start":1730214389051,"stop":1730214389051,"duration":0},"status":"broken","statusMessage":"_pytest.fixtures.FixtureLookupError: ('headers', <FixtureRequest for <Function test_create_message_without_content>>)","statusTrace":"file /home/runner/work/Test_API_Diploma/Test_API_Diploma/test_API.py, line 65\n  def test_create_message_without_content(base_url1, channel_id, headers):\nE       fixture 'headers' not found\n>       available fixtures: base_url1, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, channel_id, doctest_namespace, get_headers, message_id, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/Test_API_Diploma/Test_API_Diploma/test_API.py:65","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url1","time":{"start":1730214389039,"stop":1730214389039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730214389039,"stop":1730214389040,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"suite","value":"test_API"},{"name":"host","value":"fv-az883-341"},{"name":"thread","value":"2106-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":6},"items":[{"uid":"b2ca6853338a96ad","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/5//#testresult/b2ca6853338a96ad","status":"failed","statusDetails":"AssertionError: Expected 400 for empty content, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210127737,"stop":1730210127845,"duration":108}},{"uid":"7a52b6e1b56e73a","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/4//#testresult/7a52b6e1b56e73a","status":"failed","statusDetails":"AssertionError: Expected 400 for empty content, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210042746,"stop":1730210042853,"duration":107}},{"uid":"880a358ae62fb2a5","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/3//#testresult/880a358ae62fb2a5","status":"failed","statusDetails":"AssertionError: Expected 400 for empty content, but got 401: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730209053198,"stop":1730209053307,"duration":109}},{"uid":"81b98c64e8fa6817","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/2//#testresult/81b98c64e8fa6817","status":"failed","statusDetails":"AssertionError: Expected 400 for empty content, but got 401: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730208045443,"stop":1730208045522,"duration":79}},{"uid":"814e63be6f207abb","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/1//#testresult/814e63be6f207abb","status":"passed","time":{"start":1730207690128,"stop":1730207690266,"duration":138}}]},"tags":[]},"source":"d8fd695928138cb7.json","parameterValues":[]}