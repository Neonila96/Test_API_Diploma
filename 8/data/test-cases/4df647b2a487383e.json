{"uid":"4df647b2a487383e","name":"test_remove_reaction","fullName":"test_API#test_remove_reaction","historyId":"edb5b2e5121b5483ab6884e651a498f6","time":{"start":1730215292023,"stop":1730215292023,"duration":0},"status":"failed","statusMessage":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","statusTrace":"base_url1 = 'https://discord.com/api/v10', channel_id = 1286673475565518878\nheaders = {'Authorization': 'Bot MTI4NjYwOTgxOTEzNzk5ODg4Mw.GmX7uA.SM8jqWeGL8kjPrKvWugZyhYZK5d6j40CGjmB-M', 'Content-Type': 'application/json'}\n\n    @pytest.fixture\n    def message_id(base_url1, channel_id, headers):\n        # Создание сообщения перед каждым тестом\n        url = f\"{base_url1}/channels/{channel_id}/messages\"\n        data = {\n            \"content\": \"Калды Балды.\"\n        }\n        response = requests.post(url, headers=headers, json=data)\n>       assert response.status_code == 200, f\"Failed to create message: {response.text}\"\nE       AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\nconftest.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url1","time":{"start":1730215291463,"stop":1730215291463,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730215291464,"stop":1730215291464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"headers","time":{"start":1730215291464,"stop":1730215291464,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"a05ac1ddafd95edb","name":"Request Headers","source":"a05ac1ddafd95edb.txt","type":"text/plain","size":71}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"message_id","time":{"start":1730215292023,"stop":1730215292221,"duration":198},"status":"failed","statusMessage":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/Test_API_Diploma/Test_API_Diploma/conftest.py\", line 43, in message_id\n    assert response.status_code == 200, f\"Failed to create message: {response.text}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"suite","value":"test_API"},{"name":"host","value":"fv-az1984-468"},{"name":"thread","value":"2062-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"475d2adc3d266812","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/7//#testresult/475d2adc3d266812","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730214930289,"stop":1730214930289,"duration":0}},{"uid":"b9bad7a6d7ec0b4e","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/6//#testresult/b9bad7a6d7ec0b4e","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('headers', <FixtureRequest for <Function test_remove_reaction>>)","time":{"start":1730214389050,"stop":1730214389050,"duration":0}},{"uid":"fed9dd15c2b394b8","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/5//#testresult/fed9dd15c2b394b8","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210127660,"stop":1730210127660,"duration":0}},{"uid":"c2ee086aa02b84d4","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/4//#testresult/c2ee086aa02b84d4","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210042624,"stop":1730210042624,"duration":0}},{"uid":"5835c1a7048b276a","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/2//#testresult/5835c1a7048b276a","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730208045319,"stop":1730208045319,"duration":0}},{"uid":"59035e60330f5d1","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/1//#testresult/59035e60330f5d1","status":"failed","statusDetails":"AssertionError: assert 429 == 204\n +  where 429 = <Response [429]>.status_code","time":{"start":1730207689635,"stop":1730207689939,"duration":304}}]},"tags":[]},"source":"4df647b2a487383e.json","parameterValues":[]}