{"uid":"60454ab4c9b7617","name":"test_remove_reaction_from_nonexistent_message","fullName":"test_API#test_remove_reaction_from_nonexistent_message","historyId":"105330e664a992c9f5100d1af63282ab","time":{"start":1730215292586,"stop":1730215292678,"duration":92},"status":"failed","statusMessage":"AssertionError: Expected 400 for removing reaction from nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","statusTrace":"base_url1 = 'https://discord.com/api/v10', channel_id = 1286673475565518878\nheaders = {'Authorization': 'Bot MTI4NjYwOTgxOTEzNzk5ODg4Mw.GmX7uA.SM8jqWeGL8kjPrKvWugZyhYZK5d6j40CGjmB-M', 'Content-Type': 'application/json'}\n\n    def test_remove_reaction_from_nonexistent_message(base_url1, channel_id, headers):\n        invalid_message_id = \"12345678901234567890\"\n        emoji = \"\uD83D\uDD25\"\n        emoji_encoded = requests.utils.quote(emoji)\n        url = f\"{base_url1}/channels/{channel_id}/messages/{invalid_message_id}/reactions/{emoji_encoded}/@me\"\n        response = requests.delete(url, headers=headers)\n>       assert response.status_code == 400, \"Expected 400 for removing reaction from nonexistent message, but got a different status code.\"\nE       AssertionError: Expected 400 for removing reaction from nonexistent message, but got a different status code.\nE       assert 401 == 400\nE        +  where 401 = <Response [401]>.status_code\n\ntest_API.py:96: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url1","time":{"start":1730215291463,"stop":1730215291463,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730215291464,"stop":1730215291464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"headers","time":{"start":1730215291464,"stop":1730215291464,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"a05ac1ddafd95edb","name":"Request Headers","source":"a05ac1ddafd95edb.txt","type":"text/plain","size":71}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"afterStages":[],"labels":[{"name":"suite","value":"test_API"},{"name":"host","value":"fv-az1984-468"},{"name":"thread","value":"2062-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"b6c2c75b7902a84d","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/7//#testresult/b6c2c75b7902a84d","status":"failed","statusDetails":"AssertionError: Expected 400 for removing reaction from nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730214930739,"stop":1730214930873,"duration":134}},{"uid":"45e7b9631f468942","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/6//#testresult/45e7b9631f468942","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('headers', <FixtureRequest for <Function test_remove_reaction_from_nonexistent_message>>)","time":{"start":1730214389055,"stop":1730214389055,"duration":0}},{"uid":"19d4ccf28d0ac8f","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/5//#testresult/19d4ccf28d0ac8f","status":"failed","statusDetails":"AssertionError: Expected 400 for removing reaction from nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210128145,"stop":1730210128262,"duration":117}},{"uid":"f7fb2e3101abab31","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/4//#testresult/f7fb2e3101abab31","status":"failed","statusDetails":"AssertionError: Expected 400 for removing reaction from nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210043087,"stop":1730210043298,"duration":211}},{"uid":"3d8102878251d0da","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/2//#testresult/3d8102878251d0da","status":"failed","statusDetails":"AssertionError: Expected 400 for removing reaction from nonexistent message, but got 401\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730208045788,"stop":1730208045865,"duration":77}},{"uid":"28569bc1d51c3a47","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/1//#testresult/28569bc1d51c3a47","status":"failed","statusDetails":"AssertionError: Expected 400 for removing reaction from nonexistent message, but got 429\nassert 429 == 400\n +  where 429 = <Response [429]>.status_code","time":{"start":1730207690533,"stop":1730207690671,"duration":138}}]},"tags":[]},"source":"60454ab4c9b7617.json","parameterValues":[]}