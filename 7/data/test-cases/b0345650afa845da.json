{"uid":"b0345650afa845da","name":"test_add_reaction_to_nonexistent_message","fullName":"test_API#test_add_reaction_to_nonexistent_message","historyId":"d9d7c07fa605be566cef353c659812a9","time":{"start":1730214930629,"stop":1730214930733,"duration":104},"status":"failed","statusMessage":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","statusTrace":"base_url1 = 'https://discord.com/api/v10', channel_id = 1286673475565518878\nheaders = {'Authorization': 'Bot MTI4NjYwOTgxOTEzNzk5ODg4Mw.GmX7uA.SM8jqWeGL8kjPrKvWugZyhYZK5d6j40CGjmB-M', 'Content-Type': 'application/json'}\n\n    def test_add_reaction_to_nonexistent_message(base_url1, channel_id, headers):\n        invalid_message_id = \"12345678901234567890\"\n        emoji = \"\uD83D\uDD25\"\n        emoji_encoded = requests.utils.quote(emoji)\n        url = f\"{base_url1}/channels/{channel_id}/messages/{invalid_message_id}/reactions/{emoji_encoded}/@me\"\n        response = requests.put(url, headers=headers)\n>       assert response.status_code == 400, \"Expected 400 for adding reaction to nonexistent message, but got a different status code.\"\nE       AssertionError: Expected 400 for adding reaction to nonexistent message, but got a different status code.\nE       assert 401 == 400\nE        +  where 401 = <Response [401]>.status_code\n\ntest_API.py:87: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url1","time":{"start":1730214929646,"stop":1730214929646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"channel_id","time":{"start":1730214929647,"stop":1730214929647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"headers","time":{"start":1730214929647,"stop":1730214929647,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"a0f4b44b296e3b4a","name":"Request Headers","source":"a0f4b44b296e3b4a.txt","type":"text/plain","size":71}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"afterStages":[],"labels":[{"name":"suite","value":"test_API"},{"name":"host","value":"fv-az1210-80"},{"name":"thread","value":"2072-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":7},"items":[{"uid":"f19d5eb3c20dfbbf","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/6//#testresult/f19d5eb3c20dfbbf","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('headers', <FixtureRequest for <Function test_add_reaction_to_nonexistent_message>>)","time":{"start":1730214389054,"stop":1730214389054,"duration":0}},{"uid":"2d7389f0e7f5e6e0","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/5//#testresult/2d7389f0e7f5e6e0","status":"failed","statusDetails":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210127963,"stop":1730210128139,"duration":176}},{"uid":"9731fdc4ef8b8854","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/4//#testresult/9731fdc4ef8b8854","status":"failed","statusDetails":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got a different status code.\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210042955,"stop":1730210043081,"duration":126}},{"uid":"38acbea3d2c9970b","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/3//#testresult/38acbea3d2c9970b","status":"failed","statusDetails":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got 401\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730209053415,"stop":1730209053525,"duration":110}},{"uid":"dc4682c185edb3ee","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/2//#testresult/dc4682c185edb3ee","status":"failed","statusDetails":"AssertionError: Expected 400 for adding reaction to nonexistent message, but got 401\nassert 401 == 400\n +  where 401 = <Response [401]>.status_code","time":{"start":1730208045687,"stop":1730208045783,"duration":96}},{"uid":"e9c584d708261f39","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/1//#testresult/e9c584d708261f39","status":"passed","time":{"start":1730207690399,"stop":1730207690531,"duration":132}}]},"tags":[]},"source":"b0345650afa845da.json","parameterValues":[]}