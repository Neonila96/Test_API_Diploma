{"uid":"fa5c54c949b5ff88","name":"test_add_reaction","fullName":"test_API#test_add_reaction","historyId":"0318370101697abf2a64828c84ac018a","time":{"start":1730210127542,"stop":1730210127542,"duration":0},"status":"failed","statusMessage":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","statusTrace":"base_url1 = 'https://discord.com/api/v10', channel_id = 1286673475565518878\nheaders = {'Authorization': 'Bot MTI4NjYwOTgxOTEzNzk5ODg4Mw.GmX7uA.SM8jqWeGL8kjPrKvWugZyhYZK5d6j40CGjmB-M', 'Content-Type': 'application/json'}\n\n    @pytest.fixture\n    def message_id(base_url1, channel_id, headers):\n        # Создание сообщения перед каждым тестом\n        url = f\"{base_url1}/channels/{channel_id}/messages\"\n        data = {\n            \"content\": \"Калды Балды.\"\n        }\n        response = requests.post(url, headers=headers, json=data)\n>       assert response.status_code == 200, f\"Failed to create message: {response.text}\"\nE       AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\nconftest.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"channel_id","time":{"start":1730210127210,"stop":1730210127210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url1","time":{"start":1730210127210,"stop":1730210127210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"headers","time":{"start":1730210127210,"stop":1730210127211,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"message_id","time":{"start":1730210127542,"stop":1730210127654,"duration":112},"status":"failed","statusMessage":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/Test_API_Diploma/Test_API_Diploma/conftest.py\", line 37, in message_id\n    assert response.status_code == 200, f\"Failed to create message: {response.text}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"suite","value":"test_API"},{"name":"host","value":"fv-az532-781"},{"name":"thread","value":"2079-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":5},"items":[{"uid":"14e7e1c0b163102e","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/4//#testresult/14e7e1c0b163102e","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730210042495,"stop":1730210042495,"duration":0}},{"uid":"d5c22d8b07539f6f","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/3//#testresult/d5c22d8b07539f6f","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730209053079,"stop":1730209053079,"duration":0}},{"uid":"7d6f1527f5c30af5","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/2//#testresult/7d6f1527f5c30af5","status":"failed","statusDetails":"AssertionError: Failed to create message: {\"message\": \"401: Unauthorized\", \"code\": 0}\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1730208045205,"stop":1730208045205,"duration":0}},{"uid":"dc9a166916cc22b9","reportUrl":"https://Neonila96.github.io/Test_API_Diploma/1//#testresult/dc9a166916cc22b9","status":"passed","time":{"start":1730207689066,"stop":1730207689240,"duration":174}}]},"tags":[]},"source":"fa5c54c949b5ff88.json","parameterValues":[]}